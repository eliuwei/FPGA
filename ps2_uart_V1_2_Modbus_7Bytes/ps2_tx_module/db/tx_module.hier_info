|tx_module_demo
CLK => CLK.IN4
RSTn => RSTn.IN4
PS2_CLK_Pin_In => PS2_CLK_Pin_In.IN1
PS2_Data_Pin_In => PS2_Data_Pin_In.IN1
TX_Pin_Out << tx_module:U2.TX_Pin_Out
LED[0] << ps2_keyboard_to_hex:UU0.LED
LED[1] << ps2_keyboard_to_hex:UU0.LED
LED[2] << ps2_keyboard_to_hex:UU0.LED
LED[3] << ps2_keyboard_to_hex:UU0.LED


|tx_module_demo|ps2_module:UUtop
CLK => CLK.IN2
RSTn => RSTn.IN2
PS2_CLK_Pin_In => PS2_CLK_Pin_In.IN1
PS2_Data_Pin_In => PS2_Data_Pin_In.IN1
PS2_Data[0] <= ps2_decode_module:U2.PS2_Data
PS2_Data[1] <= ps2_decode_module:U2.PS2_Data
PS2_Data[2] <= ps2_decode_module:U2.PS2_Data
PS2_Data[3] <= ps2_decode_module:U2.PS2_Data
PS2_Data[4] <= ps2_decode_module:U2.PS2_Data
PS2_Data[5] <= ps2_decode_module:U2.PS2_Data
PS2_Data[6] <= ps2_decode_module:U2.PS2_Data
PS2_Data[7] <= ps2_decode_module:U2.PS2_Data
PS2_Done_Sig <= ps2_decode_module:U2.PS2_Done_Sig


|tx_module_demo|ps2_module:UUtop|ps2_detect_module:U1
CLK => H2L_F2.CLK
CLK => H2L_F1.CLK
RSTn => H2L_F2.PRESET
RSTn => H2L_F1.PRESET
PS2_CLK_Pin_In => H2L_F1.DATAIN
H2L_Sig <= H2L_Sig.DB_MAX_OUTPUT_PORT_TYPE


|tx_module_demo|ps2_module:UUtop|ps2_decode_module:U2
CLK => isDone.CLK
CLK => i[0].CLK
CLK => i[1].CLK
CLK => i[2].CLK
CLK => i[3].CLK
CLK => i[4].CLK
CLK => rData[0].CLK
CLK => rData[1].CLK
CLK => rData[2].CLK
CLK => rData[3].CLK
CLK => rData[4].CLK
CLK => rData[5].CLK
CLK => rData[6].CLK
CLK => rData[7].CLK
RSTn => isDone.ACLR
RSTn => i[0].ACLR
RSTn => i[1].ACLR
RSTn => i[2].ACLR
RSTn => i[3].ACLR
RSTn => i[4].ACLR
RSTn => rData[0].ACLR
RSTn => rData[1].ACLR
RSTn => rData[2].ACLR
RSTn => rData[3].ACLR
RSTn => rData[4].ACLR
RSTn => rData[5].ACLR
RSTn => rData[6].ACLR
RSTn => rData[7].ACLR
H2L_Sig => i.OUTPUTSELECT
H2L_Sig => i.OUTPUTSELECT
H2L_Sig => i.OUTPUTSELECT
H2L_Sig => i.OUTPUTSELECT
H2L_Sig => i.OUTPUTSELECT
H2L_Sig => rData.OUTPUTSELECT
H2L_Sig => rData.OUTPUTSELECT
H2L_Sig => rData.OUTPUTSELECT
H2L_Sig => rData.OUTPUTSELECT
H2L_Sig => rData.OUTPUTSELECT
H2L_Sig => rData.OUTPUTSELECT
H2L_Sig => rData.OUTPUTSELECT
H2L_Sig => rData.OUTPUTSELECT
H2L_Sig => i.OUTPUTSELECT
H2L_Sig => i.OUTPUTSELECT
H2L_Sig => i.OUTPUTSELECT
H2L_Sig => i.OUTPUTSELECT
H2L_Sig => i.OUTPUTSELECT
PS2_Data_Pin_In => rData.DATAB
PS2_Data_Pin_In => rData.DATAB
PS2_Data_Pin_In => rData.DATAB
PS2_Data_Pin_In => rData.DATAB
PS2_Data_Pin_In => rData.DATAB
PS2_Data_Pin_In => rData.DATAB
PS2_Data_Pin_In => rData.DATAB
PS2_Data_Pin_In => rData.DATAB
PS2_Data[0] <= rData[0].DB_MAX_OUTPUT_PORT_TYPE
PS2_Data[1] <= rData[1].DB_MAX_OUTPUT_PORT_TYPE
PS2_Data[2] <= rData[2].DB_MAX_OUTPUT_PORT_TYPE
PS2_Data[3] <= rData[3].DB_MAX_OUTPUT_PORT_TYPE
PS2_Data[4] <= rData[4].DB_MAX_OUTPUT_PORT_TYPE
PS2_Data[5] <= rData[5].DB_MAX_OUTPUT_PORT_TYPE
PS2_Data[6] <= rData[6].DB_MAX_OUTPUT_PORT_TYPE
PS2_Data[7] <= rData[7].DB_MAX_OUTPUT_PORT_TYPE
PS2_Done_Sig <= isDone.DB_MAX_OUTPUT_PORT_TYPE


|tx_module_demo|ps2_keyboard_to_hex:UU0
CLK => LED[0]~reg0.CLK
CLK => LED[1]~reg0.CLK
CLK => LED[2]~reg0.CLK
CLK => LED[3]~reg0.CLK
CLK => KeyBoardData[0]~reg0.CLK
CLK => KeyBoardData[1]~reg0.CLK
CLK => KeyBoardData[2]~reg0.CLK
CLK => KeyBoardData[3]~reg0.CLK
CLK => KeyBoardData[4]~reg0.CLK
CLK => KeyBoardData[5]~reg0.CLK
CLK => KeyBoardData[6]~reg0.CLK
CLK => KeyBoardData[7]~reg0.CLK
RSTn => KeyBoardData[0]~reg0.ACLR
RSTn => KeyBoardData[1]~reg0.ACLR
RSTn => KeyBoardData[2]~reg0.ACLR
RSTn => KeyBoardData[3]~reg0.ACLR
RSTn => KeyBoardData[4]~reg0.ACLR
RSTn => KeyBoardData[5]~reg0.ACLR
RSTn => KeyBoardData[6]~reg0.ACLR
RSTn => KeyBoardData[7]~reg0.ACLR
PS2_Done_Sig => KeyBoardData[7]~reg0.ENA
PS2_Done_Sig => KeyBoardData[6]~reg0.ENA
PS2_Done_Sig => KeyBoardData[5]~reg0.ENA
PS2_Done_Sig => KeyBoardData[4]~reg0.ENA
PS2_Done_Sig => KeyBoardData[3]~reg0.ENA
PS2_Done_Sig => KeyBoardData[2]~reg0.ENA
PS2_Done_Sig => KeyBoardData[1]~reg0.ENA
PS2_Done_Sig => KeyBoardData[0]~reg0.ENA
PS2_Data[0] => Decoder0.IN7
PS2_Data[0] => LED[0]~reg0.DATAIN
PS2_Data[1] => Decoder0.IN6
PS2_Data[1] => LED[1]~reg0.DATAIN
PS2_Data[2] => Decoder0.IN5
PS2_Data[2] => LED[2]~reg0.DATAIN
PS2_Data[3] => Decoder0.IN4
PS2_Data[3] => LED[3]~reg0.DATAIN
PS2_Data[4] => Decoder0.IN3
PS2_Data[5] => Decoder0.IN2
PS2_Data[6] => Decoder0.IN1
PS2_Data[7] => Decoder0.IN0
KeyBoardData[0] <= KeyBoardData[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
KeyBoardData[1] <= KeyBoardData[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
KeyBoardData[2] <= KeyBoardData[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
KeyBoardData[3] <= KeyBoardData[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
KeyBoardData[4] <= KeyBoardData[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
KeyBoardData[5] <= KeyBoardData[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
KeyBoardData[6] <= KeyBoardData[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
KeyBoardData[7] <= KeyBoardData[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LED[0] <= LED[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LED[1] <= LED[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LED[2] <= LED[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LED[3] <= LED[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|tx_module_demo|ps2_tx_control_module:U1
CLK => counter[0].CLK
CLK => counter[1].CLK
CLK => counter[2].CLK
CLK => counter[3].CLK
CLK => counter[4].CLK
CLK => counter[5].CLK
CLK => counter[6].CLK
CLK => counter[7].CLK
CLK => counter[8].CLK
CLK => counter[9].CLK
CLK => counter[10].CLK
CLK => counter[11].CLK
CLK => counter[12].CLK
CLK => counter[13].CLK
CLK => counter[14].CLK
CLK => counter[15].CLK
CLK => counter[16].CLK
CLK => counter[17].CLK
CLK => counter[18].CLK
CLK => counter[19].CLK
CLK => counter[20].CLK
CLK => counter[21].CLK
CLK => counter[22].CLK
CLK => counter[23].CLK
CLK => counter[24].CLK
CLK => counter[25].CLK
CLK => counter[26].CLK
CLK => counter[27].CLK
CLK => counter[28].CLK
CLK => counter[29].CLK
CLK => counter[30].CLK
CLK => counter[31].CLK
CLK => isEn.CLK
CLK => rData[0].CLK
CLK => rData[1].CLK
CLK => rData[2].CLK
CLK => rData[3].CLK
CLK => rData[4].CLK
CLK => rData[5].CLK
CLK => rData[6].CLK
CLK => rData[7].CLK
CLK => NextState~5.DATAIN
CLK => CurrentState~1.DATAIN
RSTn => counter[0].ACLR
RSTn => counter[1].ACLR
RSTn => counter[2].ACLR
RSTn => counter[3].ACLR
RSTn => counter[4].ACLR
RSTn => counter[5].ACLR
RSTn => counter[6].ACLR
RSTn => counter[7].ACLR
RSTn => counter[8].ACLR
RSTn => counter[9].ACLR
RSTn => counter[10].ACLR
RSTn => counter[11].ACLR
RSTn => counter[12].ACLR
RSTn => counter[13].ACLR
RSTn => counter[14].ACLR
RSTn => counter[15].ACLR
RSTn => counter[16].ACLR
RSTn => counter[17].ACLR
RSTn => counter[18].ACLR
RSTn => counter[19].ACLR
RSTn => counter[20].ACLR
RSTn => counter[21].ACLR
RSTn => counter[22].ACLR
RSTn => counter[23].ACLR
RSTn => counter[24].ACLR
RSTn => counter[25].ACLR
RSTn => counter[26].ACLR
RSTn => counter[27].ACLR
RSTn => counter[28].ACLR
RSTn => counter[29].ACLR
RSTn => counter[30].ACLR
RSTn => counter[31].ACLR
RSTn => CurrentState~3.DATAIN
PS2_Done_Sig => always1.IN0
PS2_Done_Sig => always1.IN0
PS2_Done_Sig => always1.IN0
KeyBoardData[0] => rData[0].DATAIN
KeyBoardData[1] => rData[1].DATAIN
KeyBoardData[2] => rData[2].DATAIN
KeyBoardData[3] => rData[3].DATAIN
KeyBoardData[4] => rData[4].DATAIN
KeyBoardData[5] => rData[5].DATAIN
KeyBoardData[6] => rData[6].DATAIN
KeyBoardData[7] => rData[7].DATAIN
TX_Done_Sig => always1.IN1
TX_Done_Sig => always1.IN1
TX_Done_Sig => always1.IN1
TX_En_Sig <= isEn.DB_MAX_OUTPUT_PORT_TYPE
TX_Data[0] <= rData[0].DB_MAX_OUTPUT_PORT_TYPE
TX_Data[1] <= rData[1].DB_MAX_OUTPUT_PORT_TYPE
TX_Data[2] <= rData[2].DB_MAX_OUTPUT_PORT_TYPE
TX_Data[3] <= rData[3].DB_MAX_OUTPUT_PORT_TYPE
TX_Data[4] <= rData[4].DB_MAX_OUTPUT_PORT_TYPE
TX_Data[5] <= rData[5].DB_MAX_OUTPUT_PORT_TYPE
TX_Data[6] <= rData[6].DB_MAX_OUTPUT_PORT_TYPE
TX_Data[7] <= rData[7].DB_MAX_OUTPUT_PORT_TYPE


|tx_module_demo|tx_module:U2
CLK => CLK.IN2
RSTn => RSTn.IN2
TX_Data[0] => TX_Data[0].IN1
TX_Data[1] => TX_Data[1].IN1
TX_Data[2] => TX_Data[2].IN1
TX_Data[3] => TX_Data[3].IN1
TX_Data[4] => TX_Data[4].IN1
TX_Data[5] => TX_Data[5].IN1
TX_Data[6] => TX_Data[6].IN1
TX_Data[7] => TX_Data[7].IN1
TX_En_Sig => TX_En_Sig.IN2
TX_Done_Sig <= tx_control_module:U2.TX_Done_Sig
TX_Pin_Out <= tx_control_module:U2.TX_Pin_Out


|tx_module_demo|tx_module:U2|tx_bps_module:U1
CLK => Count_BPS[0].CLK
CLK => Count_BPS[1].CLK
CLK => Count_BPS[2].CLK
CLK => Count_BPS[3].CLK
CLK => Count_BPS[4].CLK
CLK => Count_BPS[5].CLK
CLK => Count_BPS[6].CLK
CLK => Count_BPS[7].CLK
CLK => Count_BPS[8].CLK
CLK => Count_BPS[9].CLK
CLK => Count_BPS[10].CLK
CLK => Count_BPS[11].CLK
CLK => Count_BPS[12].CLK
RSTn => Count_BPS[0].ACLR
RSTn => Count_BPS[1].ACLR
RSTn => Count_BPS[2].ACLR
RSTn => Count_BPS[3].ACLR
RSTn => Count_BPS[4].ACLR
RSTn => Count_BPS[5].ACLR
RSTn => Count_BPS[6].ACLR
RSTn => Count_BPS[7].ACLR
RSTn => Count_BPS[8].ACLR
RSTn => Count_BPS[9].ACLR
RSTn => Count_BPS[10].ACLR
RSTn => Count_BPS[11].ACLR
RSTn => Count_BPS[12].ACLR
Count_Sig => Count_BPS.OUTPUTSELECT
Count_Sig => Count_BPS.OUTPUTSELECT
Count_Sig => Count_BPS.OUTPUTSELECT
Count_Sig => Count_BPS.OUTPUTSELECT
Count_Sig => Count_BPS.OUTPUTSELECT
Count_Sig => Count_BPS.OUTPUTSELECT
Count_Sig => Count_BPS.OUTPUTSELECT
Count_Sig => Count_BPS.OUTPUTSELECT
Count_Sig => Count_BPS.OUTPUTSELECT
Count_Sig => Count_BPS.OUTPUTSELECT
Count_Sig => Count_BPS.OUTPUTSELECT
Count_Sig => Count_BPS.OUTPUTSELECT
Count_Sig => Count_BPS.OUTPUTSELECT
BPS_CLK <= Equal1.DB_MAX_OUTPUT_PORT_TYPE


|tx_module_demo|tx_module:U2|tx_control_module:U2
CLK => isDone.CLK
CLK => rTX.CLK
CLK => i[0].CLK
CLK => i[1].CLK
CLK => i[2].CLK
CLK => i[3].CLK
RSTn => isDone.ACLR
RSTn => rTX.PRESET
RSTn => i[0].ACLR
RSTn => i[1].ACLR
RSTn => i[2].ACLR
RSTn => i[3].ACLR
TX_En_Sig => isDone.ENA
TX_En_Sig => i[3].ENA
TX_En_Sig => i[2].ENA
TX_En_Sig => i[1].ENA
TX_En_Sig => i[0].ENA
TX_En_Sig => rTX.ENA
TX_Data[0] => Mux0.IN10
TX_Data[1] => Mux0.IN9
TX_Data[2] => Mux0.IN8
TX_Data[3] => Mux0.IN7
TX_Data[4] => Mux0.IN6
TX_Data[5] => Mux0.IN5
TX_Data[6] => Mux0.IN4
TX_Data[7] => Mux0.IN3
BPS_CLK => i.OUTPUTSELECT
BPS_CLK => rTX.OUTPUTSELECT
BPS_CLK => i.OUTPUTSELECT
BPS_CLK => i.OUTPUTSELECT
BPS_CLK => i.OUTPUTSELECT
BPS_CLK => i.OUTPUTSELECT
BPS_CLK => rTX.OUTPUTSELECT
BPS_CLK => i.OUTPUTSELECT
BPS_CLK => i.OUTPUTSELECT
BPS_CLK => i.OUTPUTSELECT
BPS_CLK => rTX.OUTPUTSELECT
BPS_CLK => i.OUTPUTSELECT
BPS_CLK => i.OUTPUTSELECT
BPS_CLK => i.OUTPUTSELECT
BPS_CLK => i.OUTPUTSELECT
BPS_CLK => isDone.OUTPUTSELECT
TX_Done_Sig <= isDone.DB_MAX_OUTPUT_PORT_TYPE
TX_Pin_Out <= rTX.DB_MAX_OUTPUT_PORT_TYPE


